{"remainingRequest":"C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\src\\pages\\RegisterPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\src\\pages\\RegisterPage.vue","mtime":1625870074960},{"path":"C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\assignment-3-3-205590656_313584294\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgY291bnRyaWVzIGZyb20gIi4uL2Fzc2V0cy9jb3VudHJpZXMiOw0KaW1wb3J0IHsNCiAgcmVxdWlyZWQsDQogIG1pbkxlbmd0aCwNCiAgbWF4TGVuZ3RoLA0KICBhbHBoYSwNCiAgc2FtZUFzLA0KICBlbWFpbA0KfSBmcm9tICJ2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJSZWdpc3RlciIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGZvcm06IHsNCiAgICAgICAgdXNlcm5hbWU6ICIiLA0KICAgICAgICBmaXJzdE5hbWU6ICIiLA0KICAgICAgICBsYXN0TmFtZTogIiIsDQogICAgICAgIGNvdW50cnk6IG51bGwsDQogICAgICAgIHBhc3N3b3JkOiAiIiwNCiAgICAgICAgY29uZmlybWVkUGFzc3dvcmQ6ICIiLA0KICAgICAgICBlbWFpbDogIiIsDQogICAgICAgIHByb2ZpbGVJbWc6ICIiLA0KICAgICAgICBzdWJtaXRFcnJvcjogdW5kZWZpbmVkDQogICAgICB9LA0KICAgICAgY291bnRyaWVzOiBbeyB2YWx1ZTogbnVsbCwgdGV4dDogIiIsIGRpc2FibGVkOiB0cnVlIH1dLA0KICAgICAgZXJyb3JzOiBbXSwNCiAgICAgIHZhbGlkYXRlZDogZmFsc2UNCiAgICB9Ow0KICB9LA0KICB2YWxpZGF0aW9uczogew0KICAgIGZvcm06IHsNCiAgICAgIHVzZXJuYW1lOiB7DQogICAgICAgIHJlcXVpcmVkLA0KICAgICAgICBsZW5ndGg6ICh1KSA9PiBtaW5MZW5ndGgoMykodSkgJiYgbWF4TGVuZ3RoKDgpKHUpLA0KICAgICAgICBhbHBoYQ0KICAgICAgfSwNCiAgICAgIGZpcnN0TmFtZTogew0KICAgICAgICByZXF1aXJlZCwNCiAgICAgICAgYWxwaGENCiAgICAgIH0sDQogICAgICBsYXN0TmFtZTogew0KICAgICAgICByZXF1aXJlZCwNCiAgICAgICAgYWxwaGENCiAgICAgIH0sDQogICAgICBjb3VudHJ5OiB7DQogICAgICAgIHJlcXVpcmVkDQogICAgICB9LA0KICAgICAgcGFzc3dvcmQ6IHsNCiAgICAgICAgcmVxdWlyZWQsDQogICAgICAgIGxlbmd0aDogKHApID0+IG1pbkxlbmd0aCg1KShwKSAmJiBtYXhMZW5ndGgoMTApKHApLA0KICAgICAgICBvbmx5RGlnaXQ6IGZ1bmN0aW9uKHZhbHVlKSB7DQogICAgICAgICAgcmV0dXJuIC9bMC05XS8udGVzdCh2YWx1ZSk7DQogICAgICAgIH0sDQogICAgICAgIG9uZVNwZWNpYWxDaGFyOiBmdW5jdGlvbih2YWx1ZSkgew0KICAgICAgICAgIC8vcmV0dXJuIC9bIz8hQCQlXiYqLSgpLC4/Ijp7fXw+PF0vLnRlc3QodmFsdWUpOw0KICAgICAgICAgIHJldHVybiAvWyM/IUAkJV4mKi1dLy50ZXN0KHZhbHVlKTsNCiAgICAgICAgIA0KICAgICAgICB9LA0KICAgICAgfSwNCiAgICAgIGNvbmZpcm1lZFBhc3N3b3JkOiB7DQogICAgICAgIHJlcXVpcmVkLA0KICAgICAgICBzYW1lQXNQYXNzd29yZDogc2FtZUFzKCJwYXNzd29yZCIpDQogICAgICB9LA0KICAgICAgZW1haWw6IHsNCiAgICAgICAgcmVxdWlyZWQsDQogICAgICB9LA0KICAgICAgcHJvZmlsZUltZzogew0KICAgICAgICByZXF1aXJlZCwNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgLy8gY29uc29sZS5sb2coIm1vdW50ZWQiKTsNCiAgICB0aGlzLmNvdW50cmllcy5wdXNoKC4uLmNvdW50cmllcyk7DQogICAgLy8gY29uc29sZS5sb2coJHYpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdmFsaWRhdGVTdGF0ZShwYXJhbSkgew0KICAgICAgY29uc3QgeyAkZGlydHksICRlcnJvciB9ID0gdGhpcy4kdi5mb3JtW3BhcmFtXTsNCiAgICAgIHJldHVybiAkZGlydHkgPyAhJGVycm9yIDogbnVsbDsNCiAgICB9LA0KICAgIGFzeW5jIFJlZ2lzdGVyKCkgew0KICAgICAgdHJ5IHsNCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmF4aW9zLnBvc3QoDQogICAgICAgICAgdGhpcy4kcm9vdC5zdG9yZS5CQVNFX1VSTCArICIvUmVnaXN0ZXIiLA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLmZvcm0udXNlcm5hbWUsDQogICAgICAgICAgICBwYXNzd29yZDogdGhpcy5mb3JtLnBhc3N3b3JkDQogICAgICAgICAgfQ0KICAgICAgICApOw0KICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2xvZ2luIik7DQogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsNCiAgICAgIH0gY2F0Y2ggKGVycikgew0KICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2UpOw0KICAgICAgICB0aGlzLmZvcm0uc3VibWl0RXJyb3IgPSBlcnIucmVzcG9uc2UuZGF0YS5tZXNzYWdlOw0KICAgICAgfQ0KICAgIH0sDQogICAgb25SZWdpc3RlcigpIHsNCiAgICAgIC8vIGNvbnNvbGUubG9nKCJyZWdpc3RlciBtZXRob2QgY2FsbGVkIik7DQogICAgICB0aGlzLiR2LmZvcm0uJHRvdWNoKCk7DQogICAgICBpZiAodGhpcy4kdi5mb3JtLiRhbnlFcnJvcikgew0KICAgICAgICByZXR1cm47DQogICAgICB9DQogICAgICAvLyBjb25zb2xlLmxvZygicmVnaXN0ZXIgbWV0aG9kIGdvIik7DQogICAgICB0aGlzLlJlZ2lzdGVyKCk7DQogICAgfSwNCiAgICBvblJlc2V0KCkgew0KICAgICAgdGhpcy5mb3JtID0gew0KICAgICAgICB1c2VybmFtZTogIiIsDQogICAgICAgIGZpcnN0TmFtZTogIiIsDQogICAgICAgIGxhc3ROYW1lOiAiIiwNCiAgICAgICAgY291bnRyeTogbnVsbCwNCiAgICAgICAgcGFzc3dvcmQ6ICIiLA0KICAgICAgICBjb25maXJtZWRQYXNzd29yZDogIiIsDQogICAgICAgIGVtYWlsOiAiIiwNCiAgICAgICAgcHJvZmlsZUltZzogIiIsDQogICAgICB9Ow0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICB0aGlzLiR2LiRyZXNldCgpOw0KICAgICAgfSk7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["RegisterPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"RegisterPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Register</h1>\r\n    <b-form @submit.prevent=\"onRegister\" @reset.prevent=\"onReset\">\r\n      <!--username-->\r\n      <b-form-group\r\n        id=\"input-group-username\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Username:\"\r\n        label-for=\"username\"\r\n      >\r\n        <b-form-input\r\n          id=\"username\"\r\n          v-model=\"$v.form.username.$model\"\r\n          type=\"text\"\r\n          :state=\"validateState('username')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.username.required\">\r\n          Username is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-else-if=\"!$v.form.username.length\">\r\n          Username length should be between 3-8 characters long\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.username.alpha\">\r\n          Username must contain only letters in English\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <!--firstName-->\r\n      <b-form-group\r\n        id=\"input-group-firstName\"\r\n        label-cols-sm=\"3\"\r\n        label=\"First Name:\"\r\n        label-for=\"firstName\"\r\n      >\r\n        <b-form-input\r\n          id=\"firstName\"\r\n          v-model=\"$v.form.firstName.$model\"\r\n          type=\"text\"\r\n          :state=\"validateState('firstName')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.firstName.required\">\r\n          First name is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.firstName.alpha\">\r\n          First name must contain only letters\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <!--lastName-->\r\n      <b-form-group\r\n        id=\"input-group-lastName\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Last Name:\"\r\n        label-for=\"lastName\"\r\n      >\r\n        <b-form-input\r\n          id=\"lastName\"\r\n          v-model=\"$v.form.lastName.$model\"\r\n          type=\"text\"\r\n          :state=\"validateState('lastName')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.lastName.required\">\r\n          Last name is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.lastName.alpha\">\r\n          Last name must contain only letters\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <!--country-->\r\n      <b-form-group\r\n        id=\"input-group-country\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Country:\"\r\n        label-for=\"country\"\r\n      >\r\n        <b-form-select\r\n          id=\"country\"\r\n          v-model=\"$v.form.country.$model\"\r\n          :options=\"countries\"\r\n          :state=\"validateState('country')\"\r\n        ></b-form-select>\r\n        <b-form-invalid-feedback>\r\n          Country is required\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n      \r\n      <!--password-->\r\n      <b-form-group\r\n        id=\"input-group-Password\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Password:\"\r\n        label-for=\"password\"\r\n      >\r\n        <b-form-input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          v-model=\"$v.form.password.$model\"\r\n          :state=\"validateState('password')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.password.required\">\r\n          Password is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback\r\n          v-if=\"!$v.form.password.onlyDigit\" >\r\n          Your password should have at least one digit\r\n        </b-form-invalid-feedback>\r\n          <b-form-invalid-feedback\r\n          v-if=\"!$v.form.password.oneSpecialChar\" >\r\n           Your password should have at least one special character: #?!@$%^&*-\r\n        </b-form-invalid-feedback>\r\n        <b-form-text v-else-if=\"$v.form.password.$error\" text-variant=\"info\">\r\n          Your password should be <strong>strong</strong>. <br />\r\n          For that, your password should be also:\r\n        </b-form-text>\r\n        <b-form-invalid-feedback\r\n          v-if=\"$v.form.password.required && !$v.form.password.length\"\r\n        >\r\n          Your password should be 5-10 characters long\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <!--Confirm Password-->\r\n      <b-form-group\r\n        id=\"input-group-confirmedPassword\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Confirm Password:\"\r\n        label-for=\"confirmedPassword\"\r\n      >\r\n        <b-form-input\r\n          id=\"confirmedPassword\"\r\n          type=\"password\"\r\n          v-model=\"$v.form.confirmedPassword.$model\"\r\n          :state=\"validateState('confirmedPassword')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.confirmedPassword.required\">\r\n          Password confirmation is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback\r\n          v-else-if=\"!$v.form.confirmedPassword.sameAsPassword\"\r\n        >\r\n          The confirmed password is not equal to the original password\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <!--email-->\r\n      <b-form-group\r\n        id=\"input-group-email\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Email:\"\r\n        label-for=\"email\"\r\n      >\r\n        <b-form-input\r\n          id=\"email\"\r\n          v-model=\"$v.form.email.$model\"\r\n          type=\"email\"\r\n          :state=\"validateState('email')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.email.required\">\r\n          Email is required\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <!--profileImg-->\r\n      <b-form-group\r\n        id=\"input-group-profileImg\"\r\n        label-cols-sm=\"3\"\r\n        label=\"Path to profile img:\"\r\n        label-for=\"profileImg\"\r\n      >\r\n        <b-form-input\r\n          id=\"profileImg\"\r\n          v-model=\"$v.form.profileImg.$model\"\r\n          type=\"text\"\r\n          :state=\"validateState('profileImg')\"\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.profileImg.required\">\r\n          Path to profile img is required\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\r\n      <b-button\r\n        type=\"submit\"\r\n        variant=\"primary\"\r\n        style=\"width:250px;\"\r\n        class=\"ml-5 w-75\"\r\n        >Register</b-button\r\n      >\r\n      <div class=\"mt-2\">\r\n        You have an account already?\r\n        <router-link to=\"login\"> Log in here</router-link>\r\n      </div>\r\n    </b-form>\r\n    <b-alert\r\n      class=\"mt-2\"\r\n      v-if=\"form.submitError\"\r\n      variant=\"warning\"\r\n      dismissible\r\n      show\r\n    >\r\n      Register failed: {{ form.submitError }}\r\n    </b-alert>\r\n    <!-- <b-card class=\"mt-3 md-3\" header=\"Form Data Result\">\r\n      <pre class=\"m-0\"><strong>form:</strong> {{ form }}</pre>\r\n      <pre class=\"m-0\"><strong>$v.form:</strong> {{ $v.form }}</pre>\r\n    </b-card> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport countries from \"../assets/countries\";\r\nimport {\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  alpha,\r\n  sameAs,\r\n  email\r\n} from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        email: \"\",\r\n        profileImg: \"\",\r\n        submitError: undefined\r\n      },\r\n      countries: [{ value: null, text: \"\", disabled: true }],\r\n      errors: [],\r\n      validated: false\r\n    };\r\n  },\r\n  validations: {\r\n    form: {\r\n      username: {\r\n        required,\r\n        length: (u) => minLength(3)(u) && maxLength(8)(u),\r\n        alpha\r\n      },\r\n      firstName: {\r\n        required,\r\n        alpha\r\n      },\r\n      lastName: {\r\n        required,\r\n        alpha\r\n      },\r\n      country: {\r\n        required\r\n      },\r\n      password: {\r\n        required,\r\n        length: (p) => minLength(5)(p) && maxLength(10)(p),\r\n        onlyDigit: function(value) {\r\n          return /[0-9]/.test(value);\r\n        },\r\n        oneSpecialChar: function(value) {\r\n          //return /[#?!@$%^&*-(),.?\":{}|><]/.test(value);\r\n          return /[#?!@$%^&*-]/.test(value);\r\n         \r\n        },\r\n      },\r\n      confirmedPassword: {\r\n        required,\r\n        sameAsPassword: sameAs(\"password\")\r\n      },\r\n      email: {\r\n        required,\r\n      },\r\n      profileImg: {\r\n        required,\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // console.log(\"mounted\");\r\n    this.countries.push(...countries);\r\n    // console.log($v);\r\n  },\r\n  methods: {\r\n    validateState(param) {\r\n      const { $dirty, $error } = this.$v.form[param];\r\n      return $dirty ? !$error : null;\r\n    },\r\n    async Register() {\r\n      try {\r\n        const response = await this.axios.post(\r\n          this.$root.store.BASE_URL + \"/Register\",\r\n          {\r\n            username: this.form.username,\r\n            password: this.form.password\r\n          }\r\n        );\r\n        this.$router.push(\"/login\");\r\n        console.log(response);\r\n      } catch (err) {\r\n        console.log(err.response);\r\n        this.form.submitError = err.response.data.message;\r\n      }\r\n    },\r\n    onRegister() {\r\n      // console.log(\"register method called\");\r\n      this.$v.form.$touch();\r\n      if (this.$v.form.$anyError) {\r\n        return;\r\n      }\r\n      // console.log(\"register method go\");\r\n      this.Register();\r\n    },\r\n    onReset() {\r\n      this.form = {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        email: \"\",\r\n        profileImg: \"\",\r\n      };\r\n      this.$nextTick(() => {\r\n        this.$v.$reset();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  max-width: 500px;\r\n}\r\n</style>\r\n"]}]}